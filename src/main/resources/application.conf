ktor {
  deployment {
    port = 8086
    port = ${?PORT}

    paymentServiceHost = ${PAYMENT_SERVICE_HOST}
    loyaltyServiceHost = ${LOYALTY_SERVICE_HOST}
    hudiniServiceHost = ${HUDINI_SERVICE_HOST}
    ssoServiceHost=${SSO_SERVICE_HOST}
    cartServiceHost = ${CART_SERVICE_HOST}
    sanityHost=${SANITY_HOST}
    memberShipPlanURL = ${memberShipPlanURL}
    memberLookupValidationURL = ${memberLookupValidationURL}
    memberEnrollmentURL = ${memberEnrollmentURL}
    orderIdBooking = ${orderIdBooking}
    orderIdEpicure = ${orderIdEpicure}
    orderIdTEGC = ${orderIdTEGC}
    pastBookings=${pastBookings}
    upcomingBookings=${upcomingBookings}
    nonDepositRoomCommitBooking = ${nonDepositRoomCommitBooking}
    membershipSource=${membershipSource}
    //Redis
    redisKey=${?redisKey}
    redisHost=${?redisHost}
    redisPort=${?redisPort}
    timeSecondsOfTTL=${?timeSecondsOfTTL}
    requestTimeoutMillis = ${?requestTimeoutMillis}
    bookingRetryCount = ${?bookingRetryCount}
    pendingBookingsForDuration = ${?pendingBookingsForDuration}
     tenMinAgoPendingOrders = ${?tenMinAgoPendingOrders}
     twoDaysAgoPendingOrders = ${?twoDaysAgoPendingOrders}

    dataEncryptionAndDecryptionKey = ${?dataEncryptionAndDecryptionKey}
    twoMinAgoPendingOrders = ${?twoMinAgoPendingOrders}

    // Netty server config
    requestQueueLimit = 16
    // Other Netty-specific settings
    workerGroupSize = 16
    connectionGroupSize = 16
    callGroupSize = 32
    configureBootstrap = "{ group(NioEventLoopGroup(1024, Executors.newFixedThreadPool(1024))) }"
  }
  application {
    modules = [com.ihcl.order.ApplicationKt.module]
  }

  database{
    connectionString =${connectionString}
    databaseName = ${databaseName}
    connectionPoolMinSize = ${?connectionPoolMinSize}
    connectionPoolMaxSize = ${?connectionPoolMaxSize}
  }
}